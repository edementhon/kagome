<!--
/**
 *	This class defines a node in the Kagome backend mode. The LZX class "knode"
 *	is the graphical represenation of a node in Kagome. In other words, this is part
 *	of the model, while knode is part of a view. Each node in thew view (knode) will
 *	a corresponding node in the model (mnode).
 *
 *	This will contain the properties than can be edited in the node properties dialog. 
 *
 *	The nodes model is driven by the defined template.
 *	We need to research how inheritance works in JS. This would then be the base
 *	class for all model nodes, and every device template would then extend this
 *	and define their own node.
 */
-->
<library>
	<!-- 
		This class extends node because it is part of the model and not the view, so it does not need
		a physical appearance (hence it does not extend view).
	 -->
	<class name="mnode" extends="node">
		<!--  unique node identifier -->

		
		<!-- 
		The rest of the attributes come from the template
		 -->
		 <attribute name="uid" type="number" />

		 <attribute name="title"  type="string"  value="untitled"/>
		 <attribute name="screentitle"  type="string" value=""/>
		 <attribute name="screentext"  type="string" value=""/>
		 <attribute name="b1text" type="string" value=""/>
		 <attribute name="b2text" type="string" value=""/>
		 <attribute name="b3text" type="string" value=""/>
		 <attribute name="b4text" type="string" value=""/>

		 <handler name="onuid">
		 	setAttribute('title', title+uid);
		 	Debug.write("uid is ", uid);
		 </handler>
		 <!--  this class will return a dictionary with all the attributes so that we can JSON them -->
		 <method name="getJSAttrs">
		 	return {uid: uid, title: title, message: screentext,b1text: b1text, b2text: b2text, b3text: b3text, b4text: b4text};
		 </method>
	</class>
</library>
