<library>
<include href="incubator/tooltip/tooltip.lzx" />
	<class name="toppane">
	<attribute name = "zoomMag" value = "${buttons.zoomslider.value}"/>
		<!-- view name="topbar" resource="topbar" y="24" width="100%" stretches="both" /-->
		<view name="hrule" bgcolor="#CCCCCC" y="74" width="100%" height="1" />
		<view name="logoview" resource="logoswf" y="23" x="18" />
		<view name="buttons" x="$once{parent.logoview.width + 115}" height="70">
			<view name="create" y="27" >
				<basebutton resource="cnodeicon" onclick="canvas.dview.addNode()">Add node
					<tooltip>Create a node</tooltip>		
				</basebutton>
				<basebutton x="40" resource="cedgeicon">
					Add connector
					<handler name="onclick">
						canvas.dview.setAttribute('modeFlag', 'ADD_CONNECTOR');
						canvas.dview.pclickednode = null;
					</handler>
					<tooltip>Create an edge</tooltip>
				</basebutton>
				<basebutton x="120" resource="delicon" onclick="canvas.dview.deleteSelected()">
					Delete selected
					<tooltip>Delete selection</tooltip>
				</basebutton>
			</view>
			<view name="play" x="${parent.create.width+50}" y="27" >

				<basebutton resource="playicon">
					<handler name="onclick">
						canvas.model.upload(canvas.kServer);
						//make a window with a progress bar
						var win = new kpane(canvas, {height: 568, width: 822, align: "center", y:80, paneTitle: "Loading ATM Prototype ..."});
						var ld = new loading(win, {duration:7000, x: win.width/2-93, y: 80});
						ld.start();
						
						//make a copy of the library loader
						var z = canvas.clone(canvas.atmswf, canvas, "atmswfcopy");
						
						this.del = new LzDelegate( z, "load" );
        				LzTimer.addTimer( this.del, 7000 );
        				
        				this.del2 = new LzDelegate(win, "destroy");
        				LzTimer.addTimer(this.del2, 7000);
					</handler>
					<tooltip> Play your UI Demo </tooltip>
				</basebutton>

			</view>
			<view name="share" x="${parent.play.x + parent.play.width}" y="27" >
				<basebutton resource="flashicon">
					<tooltip> Share SWF</tooltip>
				</basebutton>
			</view>
			<!-- view name="createT" resource="createswf" x="$once{parent.create.x+25}" y="22"/-->


			<view name="zoomin" resource="zoom_in" x="$once{parent.share.x+parent.share.width+60}" y="35" />
			<slider name="zoomslider" x="$once{parent.zoomin.x+25}" y="40" width="100" minvalue = "1" maxvalue = "3" value="1"/>
			<view name="zoomout" resource="zoom_out" x="$once{parent.zoomslider.x+parent.zoomslider.width+5}" y="35" />
		</view>

		
		<!--"minimap" ... shows where the current view is on the devview-->
		<view name="placementDisplay" x="$once{parent.buttons.x + parent.buttons.width + 20}" y="25" width = "75" height="45">
			<view name="leftborder" x = "0" y="0" width = "1" height = "$once{parent.height}" bgcolor = "0x000000"/>
			<view name="rightborder" x = "$once{parent.width - 1}" y="0" width = "1" height = "$once{parent.height}" bgcolor = "0x000000" />
			<view name="topborder" x = "0" y="0" width = "$once{parent.width}" height = "1" bgcolor = "0x000000" />
			<view name="bottomborder" x = "0" y="$once{parent.height - 1}" width = "$once{parent.width}" height = "1" bgcolor = "0x000000" />
		
			<view name="viewbox" x = "${parent.width*(-dview.x/dview.width)}" y= "${parent.height*(-dview.y/dview.height)}" height = "${parent.height*(canvas.height/dview.height)}" width = "${parent.width*(canvas.width/dview.width)}" bgcolor = "0x000000" opacity = ".25"/> 
		</view>
	</class>
</library>
