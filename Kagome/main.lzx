<canvas width="100%" height="900">
    <include href="model" />
    <include href="view" />
	<include href="resources" />
	<include href="resources/buttons" />

<toppane name="topp" width="100%"/>
<!-- leftpane name="leftp" height="100%" width="230"/-->

<devview name="dview" width="100%" height="100%" y="$once{topp.height}" x="${leftp.width}" />

	<!--  this observer listens to what is happening in the development view and updates the model -->
	<graph name="model">
		<handler name="onselectedobj" reference="dview">
			var ref = dview;
			Debug.write("current selected node", ref.selectedobj);
			if (ref.selectedobj.from != null) {
				ref.parent.ppane.setVisible(false);
				ref.parent.edgePane.setVisible(true);
				ref.parent.edgePane.setX(ref.selectedobj.x + 50);
				ref.parent.edgePane.setY(ref.selectedobj.y + 50);
			}
			else {
				ref.parent.edgePane.setVisible(false);
				ref.parent.ppane.setVisible(true);
				ref.parent.ppane.setX(ref.selectedobj.x + 70);
				ref.parent.ppane.setY(ref.selectedobj.y + 70);
				ppane.setStuff(ref.selectedobj.modelnode);
			}
		</handler>
		<handler name="ondeselectedobj" reference="dview">
			var ref = dview;
			Debug.write("Does is get here", ref.selectedobj);
			ref.parent.ppane.setVisible(false);
			ref.parent.edgePane.setVisible(false);
		</handler>	
		<handler name="nodeAdded" reference="dview" args="modelnode">
			//this is to make sure every node has a unique ID	
			var nodeID = this.nodes.push(modelnode);
			//use setAttribute so that an onuid event gets fired
			modelnode.setAttribute('uid',nodeID);
		</handler>
		<handler name="edgeAdded" reference="dview" args="modeledge">
			var edgeID = this.edges.push(modeledge);
			modeledge.setAttribute('uid', edgeID);
		</handler>
		<handler name="nodeDeleted" reference="dview" args="modelnode">
			/*
			 * Deleting nodes from the model causes 'null' filled spots in the array.
			 * Thats cool for now.
			 */
			var id = modelnode.uid;
			//-1 because id= length, which is less than array index by 1
			this.nodes[id-1] = null;
		</handler>
		<handler name="edgeDeleted" reference="dview" args="modeledge">
			var id = modeledge.uid;
			this.edges[id-1] = null
		</handler>				
	</graph>

<NodePropertiesPane name="ppane" x="${dview.selectedobj.x}" visible="false">
</NodePropertiesPane>

<EdgePropertiesPane name="edgePane" visible="false">
</EdgePropertiesPane>

</canvas>