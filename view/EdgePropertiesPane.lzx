<library>
	<class name="EdgePropertiesPane" extends="proppane" width="280"
		height="460" paneTitle="Edge Properties">
		<attribute name="enabled" type="boolean" value="${dview.selectedobj != null}"/>
		<method name="setEdgeProperties" args="propedge">
			inside.preview.setAttribute('modelnode', propedge.s);
			inside.buttonSelect.empty();
			inside.buttonSelect.addItem("?", null);
    		inside.buttonSelect.addItem("1 " + propedge.s.b1text, 1);
    		inside.buttonSelect.addItem("2 " + propedge.s.b2text, 2);
    		inside.buttonSelect.addItem("3 " + propedge.s.b3text, 3);
    		inside.buttonSelect.addItem("4 " + propedge.s.b4text, 4);
    		if (propedge.sourceButton != null) {
    			inside.buttonSelect.selectItem(propedge.sourceButton);
    		}
    		else {
    			inside.buttonSelect.select(inside.buttonSelect.getItemAt(0));
    		}
    		inside.targetcb.selectItem(propedge.t);
			//We don't need the following because we are setting the attributes in the minipreview using a modelnode. See the first line in this method
			//inside.previewscreen.screentitle.setText(canvas.dview.selectedobj.modeledge.s.screentitle);
			//inside.previewscreen.screentext.setText(canvas.dview.selectedobj.modeledge.s.screentext);
			//inside.previewscreen.lp1.setText(canvas.dview.selectedobj.modeledge.s.b1text);
			//inside.previewscreen.lp2.setText(canvas.dview.selectedobj.modeledge.s.b2text);
			//inside.previewscreen.lp3.setText(canvas.dview.selectedobj.modeledge.s.b3text);
			//inside.previewscreen.lp4.setText(canvas.dview.selectedobj.modeledge.s.b4text);
			
		</method>
		<method name="applyStuff">
		canvas.dview.selectedobj.modeledge.setAttribute('sourceButton', inside.buttonSelect.getValue());
		canvas.dview.selectedobj.changeTarget(inside.targetcb.getValue().parent);
		</method>
		<method name="updateTargetNodesList">
			this.inside.targetcb.update();
		</method>
		<handler name="onvisible">
			/*
			 * The target nodes list gets updated everytime the visibility of the pane is toggled. Also anytime a new node is added to devview.
			 *
			 */
			updateTargetNodesList();
		</handler>
		<view width="260" height="390"  name="inside">
    		<simplelayout axis="y" spacing="5"/>
    		
  			<text>Source Screen Preview</text>
    		<atmminipreview name="preview" resource="minipreview"/>

			<view layout="class:simplelayout; yspacing:3">
	    		<text>Event: </text>
    			<radiogroup id="group1">
    				<radiobutton value="1" text="Button press"  selected="true"/>
	    			<radiobutton value="1" text="Button + logical" enabled="false"/>
		    		<radiobutton value="1" text="Logical"  enabled="false" />
		    		<radiobutton value="1" text="Timed" enabled="false" />
  				</radiogroup>
  			</view>
    		
    			<text> Source Button: </text>
	    		<!-- edittext width = "150" name = "buttonSelect" /-->
	    		<combobox name="buttonSelect" width="200"  enabled="${classroot.enabled}">
	    			<handler name="oninit">
					//moved them to setEdgeProperties
	    			</handler>
	    			<method name="empty">
	    				removeItemAt(4);
	    				removeItemAt(3);
	    				removeItemAt(2);
	    				removeItemAt(1);
	    				removeItemAt(0);
	    			</method>
	    			<handler name="onvalue">
	    				parent.preview.setButton(this.value);
	    			</handler>
	    		</combobox>

	    		<text> Target Screen: </text>
		  			<combobox name="targetcb" width="200"  enabled="${classroot.enabled}">
    				<attribute name="counter" type="number" value="0"/>
    				<method name="fill">
	    			<![CDATA[
	    				for (var i=0; i< canvas.model.nodes.length; i++) {
	    					var n = canvas.model.nodes[i];
	    					if ((n!=null) && (n != parent.preview.modelnode)) {
		    					this.addItem(n.title, n);
		    					this.counter++;
		    					//Debug.write(parent.preview.modelnode.uid);
	    					}
	    				}
	    			]]>	
	    			</method>
	    			<method name="empty">
		    			<![CDATA[
		    				for (var i=this.counter-1; i>= 0; i--) {
								removeItemAt(i);
	    					}
	    				]]>	
	    			</method>
    				<method name="update">
    				    empty();
    					fill();
    				</method>
	    		</combobox>
	    	</view>	

	</class>
</library>