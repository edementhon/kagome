<library>
	<include href="proppane.lzx" />
	<class name="NodePropManipulation" extends="proppane"
	width="330" height="290" paneTitle="Screen Properties">

		<method name="setStuff" args="propnode">
			inside.nodetitle.setText(propnode.title);
			inside.preview.setAttribute('modelnode', propnode);
		</method>
		<method name="applyStuff">
			canvas.dview.selectedobj.modelnode.setAttribute('title', inside.nodetitle.getText());
			//canvas.dview.selectedobj.modelnode.setAttribute('screentitle',inside.screentitle.getText());

			canvas.dview.selectedobj.modelnode.setAttribute('screentext', inside.preview.screenText.getText());

			canvas.dview.selectedobj.modelnode.setAttribute('b1text', inside.preview.bt1.getText());
			canvas.dview.selectedobj.modelnode.setAttribute('b2text', inside.preview.bt2.getText());
			canvas.dview.selectedobj.modelnode.setAttribute('b3text', inside.preview.bt3.getText());
			canvas.dview.selectedobj.modelnode.setAttribute('b4text', inside.preview.bt4.getText());
		</method>		

		<handler name="onstate" reference="canvas.leftp">
			if (canvas.leftp.state == "CLOSED") {
				if (parent.selectedobj.from == null) {
				this.setStuff(parent.selectedobj.modelnode);
				}
			}
		</handler>

		<view width="330" height="225" name="inside">
			<wrappinglayout axis="x" spacing="5" />
			<!--  Mini preview in a seperate class like Eric and Mahmoud
				discussed
			 -->
			 <atmminipreview_manipulation width="300" height="180" name="preview" align="center" resource="minipreview" stretches="both" />
			<ktext>Screen Title</ktext>
			<edittext width="150" name="nodetitle">
			</edittext>
		</view>

	</class>
</library>